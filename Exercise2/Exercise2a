.syntax unified
.thumb

.global main

#include "definitions.s" @ From lecture 1 Github
#include "initialise.s" @ From lecture 1 Github


@ this is the entry function called from the startup file
main:

 @ Branch with link to set the clocks for the I/O and UART
 BL enable_peripheral_clocks @ From initialise.s 

 @ Once the clocks are started, need to initialise the discovery board I/O
 BL initialise_discovery_board @ From initialise.s 

 @ store the current light pattern (binary mask) in R4
 LDR R4, =0b10101010 @ load a pattern for the set of LEDs (every second one is on)

program_loop:


 LDR R0, =GPIOE  @ load the address of the GPIOE register into R0
 STRB R4, [R0, #ODR + 1]   @ store the LED pattern byte to the second byte of the ODR (bits 8-15)

 B program_loop @ return to the program_loop label
