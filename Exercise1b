@ Not sure if work or not
.syntax unified
.thumb

.global main

.data
ascii_string: .asciz "madam"   

.text
Exercise1b:


 LDR R1, =ascii_string @ Load string address into R1


 MOV R3, R1 @ Set R3 to be the first value in string


 MOV R4, R1 @ Passeed onto functioni to set to last value in string


 


str_length: @ Find the length of the string for R4


 LDRB R5, [R4] @ Load bit from R4 into R5


 CMP R5, #0 @ Checks for null terminator in string


 BEQ last_char @ Keeps looping until null terminator reached


 


 ADD R4, R4, #1 @ Increment R4 to move to next character


 B str_length @ Loop until null terminator is found


 


last_char:


 SUB R4, R4, #1 @ Move R4 back to the last valid character


 


loop_palindrome:


 CMP R3, R4 @ Checks if the 2 pointers have met or crossed each other


 BGE is_palindrome @ String is a palindrome if this is excecuted


 LDRB R5, [R3], #1 @ Set the values of R5 to R3 to be compared then increments R3


 LDRB R6, [R4], #-1 @ Same as above but decrement for the last pointer


 


 CMP R5, R6 @ Checks the value of the 2 characters (equal or not)


 BNE not_palindrome @ If not equal, braccnhes to another function


 


 B loop_palindrome @ Keeps looping in this function until all


 @ characters are checked or reached a terminating point


 


is_palindrome:


 MOV R2, #1 @ Initialize R2 to 1 (string is a palindrome)


 B done


 


not_palindrome:


 MOV R2, #0 @ Initialize R2 to 0 (string is not a palindrome)


 B done


 


done:


 B done @ Infinite loop to stop the program (or put termination code if needed)


 
